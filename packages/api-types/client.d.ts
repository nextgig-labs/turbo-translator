/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["AppController_getHello"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/translation/translate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Translate text from one language to another */
        post: operations["TranslationController_translate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/translation/languages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get supported languages */
        get: operations["TranslationController_getSupportedLanguages"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    AppController_getHello: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    TranslationController_translate: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @example Hello world */
                    text: string;
                    /** @example en */
                    sourceLanguage: string;
                    /** @example es */
                    targetLanguage: string;
                };
            };
        };
        responses: {
            /** @description Text translated successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Hola mundo */
                        translatedText: string;
                        /** @example en */
                        sourceLanguage: string;
                        /** @example es */
                        targetLanguage: string;
                        /** @example 0.95 */
                        confidence?: number;
                    };
                };
            };
            /** @description Bad request - Invalid input parameters */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example 400 */
                        statusCode?: number;
                        /** @example Bad Request */
                        message?: string;
                        /** @example Invalid translation request */
                        error?: string;
                    };
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example 500 */
                        statusCode?: number;
                        /** @example Internal Server Error */
                        message?: string;
                        /** @example Translation service unavailable */
                        error?: string;
                    };
                };
            };
        };
    };
    TranslationController_getSupportedLanguages: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of supported languages */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        languages: {
                            /** @example en */
                            code: string;
                            /** @example English */
                            name: string;
                        }[];
                    };
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example 500 */
                        statusCode?: number;
                        /** @example Internal Server Error */
                        message?: string;
                        /** @example Failed to fetch supported languages */
                        error?: string;
                    };
                };
            };
        };
    };
}
